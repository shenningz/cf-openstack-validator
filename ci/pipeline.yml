---
custom:
  timeouts:
    long: &timeouts-long 2h
  build_logs_to_retain: &build_logs_to_retain 500

groups:
- name: ((pipeline_name))
  jobs:
  - cleanup
  - test
  - validate
  - bump-openstack-cpi
  - release

jobs:
- name: cleanup
  serial: true
  serial_groups: [openstack-project]
  build_logs_to_retain: *build_logs_to_retain
  plan:
    - aggregate:
      - {trigger: true, get: validator-src-in, tags: ((worker_tags)), timeout: *timeouts-long}
      - {trigger: true, get: pipeline-time-trigger, tags: ((worker_tags)), timeout: *timeouts-long}
      - {trigger: true, get: bosh-openstack-cpi-release, tags: ((worker_tags)), timeout: *timeouts-long}

    - task: cleanup
      tags: ((worker_tags))
      timeout: *timeouts-long
      file: validator-src-in/ci/tasks/cleanup.yml
      params:
        BOSH_OPENSTACK_DOMAIN_NAME:          ((domain))
        BOSH_OPENSTACK_AUTH_URL:             ((auth_url))
        BOSH_OPENSTACK_USERNAME:             ((username))
        BOSH_OPENSTACK_API_KEY:              ((api_key))
        BOSH_OPENSTACK_PROJECT:              ((project))
        BOSH_OPENSTACK_CA_CERT:              ((ca_cert))
        BOSH_OPENSTACK_INTERFACE:            ((interface))

- name: test
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - get: pipeline-time-trigger
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - get: validator-src-in
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - get: bosh-openstack-cpi-release
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - task: validate
    tags: ((worker_tags))
    timeout: *timeouts-long
    file: validator-src-in/ci/tasks/test.yml

- name: validate
  serial: true
  serial_groups: [openstack-project]
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - get: validator-src-in
    passed: [cleanup, test]
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - get: pipeline-time-trigger
    passed: [cleanup, test]
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - get: bosh-openstack-cpi-release
    passed: [cleanup, test]
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - trigger: false
    get: stemcell
    resource: openstack-ubuntu-xenial-stemcell
    tags: ((worker_tags))
    timeout: *timeouts-long
  - put: terraform-validator
    tags: ((worker_tags))
    timeout: *timeouts-long
    params:
      terraform_source: validator-src-in/ci/terraform/
      env_name: validator
      vars:
        auth_url: ((auth_url))
        user_name: ((username))
        password: ((api_key))
        tenant_name: ((project))
        domain_name: ((domain))
        region_name: ((tf_region_name))
        cacert_file: ((ca_cert))
        openstack_default_key_public_key: ((tf_default_public_key))
        ext_net_id: ((ext_net_id))
        ext_net_name: ((ext_net_name))
        availability_zone: ((availability_zone))
        dns_nameservers: ((dns_nameservers))
  - task: bump-openstack-cpi
    tags: ((worker_tags))
    timeout: *timeouts-long
    file: validator-src-in/ci/tasks/bump-openstack-cpi.yml
  - task: validate
    tags: ((worker_tags))
    timeout: *timeouts-long
    file: validator-src-in/ci/tasks/validate.yml
    params:
      USERNAME:                       ((username))
      AUTH_URL:                       ((auth_url))
      API_KEY:                        ((api_key))
      DOMAIN:                         ((domain))
      PROJECT:                        ((project))
      PROJECT_ID:                     ((project_id))
      DEFAULT_KEY_NAME:               ((default_key_name))
      STATIC_IP:                      ((static_ip))
      PRIVATE_KEY:                    ((private_key))
      INSTANCE_TYPE:                  ((instance_type))
      NTP_SERVER:                     ((ntp_server))
      CA_CERT:                        ((ca_cert))
      AVAILABILITY_ZONE:              ((availability_zone))
      OBJECT_STORAGE:                 ((object_storage))
      OBJECT_STORAGE_TEMP_URL_KEY:    ((object_storage_temp_url_key))
      WAIT_FOR_SWIFT:                 ((wait_for_swift))
      EXPECTED_FLAVORS:               ((expected_flavors))
      EXPECTED_QUOTAS:                ((expected_quotas))
      EXPECTED_ENDPOINTS:             ((expected_endpoints))
      INFLUXDB_IP:                    ((influxdb_ip))
      INFLUXDB_PORT:                  8086
      INFLUXDB_USER:                  admin
      INFLUXDB_PASSWORD:              ((influxdb_password))
      PIPELINE_NAME:                  ((pipeline_name))
      MTU_SIZE:                       ((mtu_size))
      AUTO_ANTI_AFFINITY:             ((auto_anti_affinity))

- name: bump-openstack-cpi
  serial: true
  serial_groups: [openstack-project]
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - get: validator-src-in
    passed: [validate]
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - get: bosh-openstack-cpi-release
    passed: [validate]
    trigger: true
    tags: ((worker_tags))
    timeout: *timeouts-long
  - task: bump-openstack-cpi
    tags: ((worker_tags))
    timeout: *timeouts-long
    file: validator-src-in/ci/tasks/bump-openstack-cpi.yml
  - put: validator-src-out
    tags: ((worker_tags))
    timeout: *timeouts-long
    params: {repository: validator-src-cpi-bumped, rebase: true}

- name: release
  build_logs_to_retain: *build_logs_to_retain
  plan:
  - aggregate:
    - {get: validator-src-out, passed: [bump-openstack-cpi], tags: ((worker_tags)), timeout: *timeouts-long }
    - {get: release-semver, tags: ((worker_tags)), timeout: *timeouts-long }

  - task: generate-commitish
    tags: ((worker_tags))
    timeout: *timeouts-long
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: boshcpi/openstack-cpi-release}
      inputs:
      - name: validator-src-out
      outputs:
      - name: generated-commitish
      run:
        path: sh
        args:
        - -c
        - "git -C validator-src-out rev-parse HEAD > generated-commitish/commitish && echo 'Commitish to release:' $(cat generated-commitish/commitish)"

  - put: gh-release
    tags: ((worker_tags))
    timeout: *timeouts-long
    params:
      name: release-semver/version
      tag: release-semver/version
      tag_prefix: v
      commitish: generated-commitish/commitish

  - put: release-semver
    tags: ((worker_tags))
    timeout: *timeouts-long
    params: { bump: minor }

resource_types:
- name: terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
resources:
- name: validator-src-in
  type: git
  tags: ((worker_tags))
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-openstack-validator
    branch: master
- name: validator-src-out
  type: git
  tags: ((worker_tags))
  source:
    uri: https://github.com/cloudfoundry-incubator/cf-openstack-validator
    branch: master
    username: openstack-cpi
    password: ((github_release_access_token))
- name: gh-release
  type: github-release
  tags: ((worker_tags))
  source:
    user: cloudfoundry-incubator
    repository: cf-openstack-validator
    access_token: ((github_release_access_token))
- name: release-semver
  type: semver
  tags: ((worker_tags))
  source:
    initial_version: 1.0.0
    driver: git
    uri: git@github.com:cloudfoundry-incubator/cf-openstack-validator.git
    branch: release-semver
    file: VERSION
    private_key: ((validator_github_private_key))
- name: pipeline-time-trigger
  type: time
  tags: ((worker_tags))
  source:
    interval: 1h
- name: terraform-validator
  type: terraform
  tags: ((worker_tags))
  source:
    storage:
      bucket: ((s3_openstack_cpi_pipeline_bucket_name))
      bucket_path: terraform-validator/
      access_key_id: ((s3_openstack_cpi_pipeline_access_key))
      secret_access_key: ((s3_openstack_cpi_pipeline_secret_key))
      region_name: ((s3_openstack_cpi_pipeline_bucket_region))
- name: bosh-openstack-cpi-release
  type: bosh-io-release
  source:
    repository: cloudfoundry/bosh-openstack-cpi-release

- name: openstack-ubuntu-xenial-stemcell
  type: bosh-io-stemcell
  tags: ((worker_tags))
  source:
    name: bosh-openstack-kvm-ubuntu-xenial-go_agent
